// 이진 변환 반복하기
// https://school.programmers.co.kr/learn/courses/30/lessons/70129

// 문제
// 0과 1로 이루어진 어떤 문자열 x에 대한 이진 변환을 다음과 같이 정의합니다.
// 1. x의 모든 0을 제거합니다.
// 2. x의 길이를 c라고 하면, x를 "c를 2진법으로 표현한 문자열"로 바꿉니다.
// 예를 들어, x = "0111010"이라면, x에 이진 변환을 가하면 x = "0111010" -> "1111" -> "100" 이 됩니다.
// 0과 1로 이루어진 문자열 s가 매개변수로 주어집니다. s가 "1"이 될 때까지 계속해서 s에 이진 변환을 가했을 때, 이진 변환의 횟수와 변환 과정에서 제거된 모든 0의 개수를 각각 배열에 담아 return 하도록 solution 함수를 완성해주세요.

// 아이디어
// 1. 받아온 문자열에서 제거할 0 개수 세기
// 2. 1의 개수 카운팅 하기
// 3. 카운팅된 수 이진 수로 변환하기
// 4. 0이 없을 때까지 1-3번 반복

// 내 코드 -> gpt 도움,,
function solution(s) {
  let count = 0; // 이진 변환 횟수
  let removedZeros = 0; // 제거된 0의 총 개수

  while (s !== "1") {
    // 1. 0 제거하고 제거된 개수 세기
    let zeros = (s.match(/0/g) || []).length; // '0'이 없을 수도 있으므로 fallback 필요
    removedZeros += zeros;

    // 2. 0 제거 후 1만 남긴 문자열 만들기
    s = s.replace(/0/g, "");

    // 3. 1의 개수를 이진수로 변환
    s = s.length.toString(2);

    // 4. 변환 횟수 증가
    count++;
  }

  return [count, removedZeros];
}

// 공부
// 1. match(/0/g)
// match(...) : 문자열에서 정규표현식에 해당하는 부분을 찾고 그 결과를 배열로 반환하는 메서드
// /0/ : 정규표현식에서 문자 '0' 하나
// /0/g : g는 글로벌의 약자로, 문자열 전체에서 모든 '0'을 찾으라는 뜻
